<?xml version="1.0"?>
<doc>
    <assembly>
        <name>acclListBar</name>
    </assembly>
    <members>
        <member name="T:vbAccelerator.Components.Drawing.CustomBorderColor">
            <summary>
            A class for deriving border colours for colours other than
            the system control colour using luminance adjustment
            techniques.  Requires the vbAccelerator <see cref="T:vbAccelerator.Components.Drawing.HLSRGB"/>
            class.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.CustomBorderColor.#ctor">
            <summary>
            Private constructor - only static methods in this class.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.CustomBorderColor.GreyScale(System.Drawing.Color)">
            <summary>
            Returns the grey intensity of a colour using the ITU
            grey-scale standard.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to get
            the grey scale value for.</param>
            <returns>A value between 0 and 255 holding the grey scale amount.
            This can be used as the r, g and b arguments to the
            <c>Color</c> class to construct the grey scale colour.</returns>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.CustomBorderColor.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            Draw a border on the specified <see cref="T:System.Drawing.Graphics"/>
            object.
            </summary>
            <param name="gfx">The <see cref="T:System.Drawing.Graphics"/> object
            to draw onto.</param>
            <param name="rect">The <see cref="T:System.Drawing.Rectangle"/> boundary
            for the border.</param>
            <param name="color">The <see cref="T:System.Drawing.Color"/> of the 
            object.  This is used to determine the border colours.</param>
            <param name="thin">Whether to draw a thin border or not.</param>
            <param name="pressed">Whether the border should be drawn pressed
            or raised.</param>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.CustomBorderColor.ColorDarkDark(System.Drawing.Color)">
            <summary>
            Returns the equivalent of the <see cref="F:System.Drawing.KnownColor.ControlDarkDark"/>
            colour for a specified colour.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to get the darker
            shadow shade for.</param>
            <returns>The darker shadow <see cref="T:System.Drawing.Color"/> for the specified
            colour.</returns>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.CustomBorderColor.ColorDark(System.Drawing.Color)">
            <summary>
            Returns the equivalent of the <see cref="F:System.Drawing.KnownColor.ControlDark"/>
            colour for a specified colour.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to get the 
            shadow shade for.</param>
            <returns>The shadow <see cref="T:System.Drawing.Color"/> for the specified
            colour.</returns>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.CustomBorderColor.ColorLight(System.Drawing.Color)">
            <summary>
            Returns the equivalent of the <see cref="F:System.Drawing.KnownColor.ControlLight"/>
            colour for a specified colour.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to get the highlight
            shade for.</param>
            <returns>The highlight <see cref="T:System.Drawing.Color"/> for the specified
            colour.</returns>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.CustomBorderColor.ColorLightLight(System.Drawing.Color)">
            <summary>
            Returns the equivalent of the <see cref="F:System.Drawing.KnownColor.ControlLightLight"/>
            colour for a specified colour.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to get the lightest
            highlight shade for.</param>
            <returns>The lightest highlight <see cref="T:System.Drawing.Color"/> for the specified
            colour.</returns>
        </member>
        <member name="T:vbAccelerator.Components.Drawing.HLSRGB">
            <summary>
            Provides a helper class allowing bi-directional conversion
            between RGB and HLS (Hue, Luminance, Saturation) colour
            models.  The HLS model is helpful if you want to produce
            darker or ligher shades of colours (by varying the Luminance)
            or if you want to produce a brigher or more washed out 
            variant (by changing the Saturation).  These operations are
            typically very difficult to do in the RGB space.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.HLSRGB.LightenColor(System.Single)">
            <summary>
            Lightens the colour by the specified amount by modifying
            the luminance (for example, 0.2 would lighten the colour by 20%)
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.HLSRGB.DarkenColor(System.Single)">
            <summary>
            Darkens the colour by the specified amount by modifying
            the luminance (for example, 0.2 would darken the colour by 20%)
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.HLSRGB.#ctor(System.Drawing.Color)">
            <summary>
            Constructs an instance of the class from the specified
            System.Drawing.Color
            </summary>
            <param name="c">The System.Drawing.Color to use to initialise the class</param>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.HLSRGB.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructs an instance of the class with the specified hue, luminance and saturation values.
            </summary>
            <param name="hue">The Hue (between 0.0 and 360.0)</param>
            <param name="luminance">The Luminance (between 0.0 and 1.0)</param>
            <param name="saturation">The Saturation (between 0.0 and 1.0)</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If any of the H,L,S values are out of the acceptable range (0.0-360.0 for Hue and 0.0-1.0 for Luminance and Saturation)</exception>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.HLSRGB.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Constructs an instance of the class with the specified red, green and blue values.
            </summary>
            <param name="red">The red component.</param>
            <param name="green">The green component.</param>
            <param name="blue">The blue component.</param>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.HLSRGB.#ctor(vbAccelerator.Components.Drawing.HLSRGB)">
            <summary>
            Constructs an instance of the class using the settings of another instance.
            </summary>
            <param name="hlsrgb">The instance to clone.</param>
        </member>
        <member name="M:vbAccelerator.Components.Drawing.HLSRGB.#ctor">
            <summary>
            Constructs a new instance of the class initialised to black.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.Drawing.HLSRGB.Red">
            <summary>
            Gets or sets the Red component of the colour.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.Drawing.HLSRGB.Green">
            <summary>
            Gets or sets the Green component of the colour.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.Drawing.HLSRGB.Blue">
            <summary>
            Gets or sets the Blue component of the colour.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.Drawing.HLSRGB.Luminance">
            <summary>
            Gets or sets the Luminance (0.0 to 1.0) of the colour.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If the value is out of the acceptable range for luminance (0.0 to 1.0)</exception>
        </member>
        <member name="P:vbAccelerator.Components.Drawing.HLSRGB.Hue">
            <summary>
            Gets or sets the Hue (0.0 to 360.0) of the colour.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If the value is out of the acceptable range for hue (0.0 to 360.0)</exception>
        </member>
        <member name="P:vbAccelerator.Components.Drawing.HLSRGB.Saturation">
            <summary>
            Gets or sets the Saturation (0.0 to 1.0) of the colour.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">If the value is out of the acceptable range for saturation (0.0 to 1.0)</exception>
        </member>
        <member name="P:vbAccelerator.Components.Drawing.HLSRGB.Color">
            <summary>
            Gets or sets the Color as a System.Drawing.Color instance
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarGroupView">
            <summary>
            Enumeration specifying the view to use for the items within
            a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/>.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.LargeIcons">
            <summary>
            The ListBar will display using large icons, with the text underneath.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.SmallIcons">
            <summary>
            The ListBar will display using small icons, with text to the left.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.LargeIconsOnly">
            <summary>
            The ListBar will display using large icons with no text.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.SmallIconsOnly">
            <summary>
            The ListBar will display using small icons with no text.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarDrawStyle">
            <summary>
            Enumeration specifying how the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> control will draw.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarDrawStyle.ListBarDrawStyleNormal">
            <summary>
            The ListBar will draw using the style of the original Office
            releases.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarDrawStyle.ListBarDrawStyleOfficeXP">
            <summary>
            The ListBar will draw using the Office XP style.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarDrawStyle.ListBarDrawStyleOffice2003">
            <summary>
            The ListBar will draw using the Office 2003 style
            (not implemented yet).
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarLabelEditEventArgs">
            <summary>
            Provides details about an item which will undergo
            an edit operation.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarLabelEditEventArgs.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Constructs a new instance of this object
            given the item, label and object.
            </summary>
            <param name="item">The index of the item being edited.</param>
            <param name="label">The label of the item being edited.</param>
            <param name="labelEditObject">The object being edited.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarLabelEditEventArgs.LabelEditObject">
            <summary>
            Returns the object for which label editing has
            been requested.  Can either be a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> or
            a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> (or a subclass of either).
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventArgs">
            <summary>
            Provides event arguments for the BeforeSelectedGroupChanged event
            raised by the control.  This object contains the group that
            would be selected and provides the opportunity to cancel the 
            group selection.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventArgs.group">
            <summary>
            The ListBarGroup that would be selected.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventArgs.cancel">
            <summary>
            Whether to cancel the operation or not.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventArgs.#ctor(vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Constructs a new instance of this object.
            Called
            by the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> control before firing a 
            <c>BeforeSelectedGroupChanged</c> event.
            </summary>
            <param name="group">The group that will be selected</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventArgs.Group">
            <summary>
            Gets the group that will be selected.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventArgs.Cancel">
            <summary>
            Gets/sets whether the group selection should be cancelled
            or not. By default the group selection is not cancelled.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventArgs">
            <summary>
            This class is used with the BeforeItemClicked event and provides
            the item which is about to be clicked and the option to prevent
            the item being clicked by setting the Cancel property.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventArgs.item">
            <summary>
            The ListBarItem which is about to be clicked.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventArgs.cancel">
            <summary>
            Whether the click should be cancelled or not.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventArgs.#ctor(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Constructor for this object. Called
            by the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> control before firing a 
            <see cref="T:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventHandler"/> event.
            </summary>
            <param name="item">The item that's about to be clicked.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventArgs.Cancel">
            <summary>
            Gets/sets whether the click should be cancelled or not.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventArgs.Item">
            <summary>
            Gets the ListBarItem that is about to be clicked.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ItemClickedEventArgs">
            <summary>
            This class is provides details of which item has been clicked
            and the mouse details of the click when the <c>ItemClicked</c> event
            is raised from a <c>ListBar</c>.
            <seealso cref="F:vbAccelerator.Components.ListBarControl.ListBar.ItemClicked"/>
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ObjectClickedEventArgs">
            <summary>
            An abstract class used as the bases for the <c>ItemClicked</c>
            and <c>GroupClicked</c> events of the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> control.
            This class stores details of the mouse location and button.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ObjectClickedEventArgs.location">
            <summary>
            The location of the mouse when the item was clicked.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ObjectClickedEventArgs.mouseButton">
            <summary>
            The mouse button that was used.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ObjectClickedEventArgs.#ctor(System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            When used in a subclass, constructs a new instance of the class with the specified
            mouse location and button.
            </summary>
            <param name="location">The location of the mouse.</param>
            <param name="mouseButton">The button which was pressed.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ObjectClickedEventArgs.Location">
            <summary>
            The Location of the mouse, relative to the control,
            when the item was clicked.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ObjectClickedEventArgs.MouseButton">
            <summary>
            The MouseButton used to click the item.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ItemClickedEventArgs.item">
            <summary>
            The ListBarIem that has been clicked.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ItemClickedEventArgs.#ctor(vbAccelerator.Components.ListBarControl.ListBarItem,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Constructs a new instance of this object.  Called by the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/>
            control when firing an <c>ItemClicked</c> event.
            </summary>
            <param name="item">The item that has been clicked</param>
            <param name="location">The mouse location relative to the 
            control for the click.</param>
            <param name="mouseButton">The mouse button used to click
            the item.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ItemClickedEventArgs.Item">
            <summary>
            Gets the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> that has been clicked.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.GroupClickedEventArgs">
            <summary>
            This class is provides details of which item has been clicked
            and the mouse details of the click when the <c>GroupClicked</c> event
            is raised from a <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.GroupClickedEventArgs.group">
            <summary>
            The ListBarGroup that has been clicked.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.GroupClickedEventArgs.#ctor(vbAccelerator.Components.ListBarControl.ListBarGroup,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Constructs a new instance of this object.  Called by the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/>
            control when firing a <c>GroupClicked</c> event.
            </summary>
            <param name="group">The <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> that has been clicked</param>
            <param name="location">The mouse location relative to the 
            control for the click.</param>
            <param name="mouseButton">The mouse button used to click
            the item.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.GroupClickedEventArgs.Group">
            <summary>
            Gets the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> that has been clicked.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventHandler">
            <summary>
            Represents the method that handles the BeforeSelectedGroupChanged event
            of a ListBar control.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.BeforeItemClickedEventHandler">
            <summary>
            Represents the method that handles the BeforeItemClicked event
            of a ListBar control.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ItemClickedEventHandler">
            <summary>
            Represents the method that handles the ItemClicked event of a
            ListBar control.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.GroupClickedEventHandler">
            <summary>
            Represents the method that handles the GroupClicked event of a
            ListBar control.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarLabelEditEventHandler">
            <summary>
            Represents the method that handles the BeforeLabelEdit and AfterLabelEdit
            events of a ListBar control.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBar">
            <summary>
            An implementation of a Microsoft Outlook Style ListBar control.
            The control provides all the features needed to implement a replica
            of the Outlook style control and is also designed to allow the same
            functionality to be used in overriden controls in which the
            individual sizing and appearance of each of the UI components can be
            customised.
            
            The <c>ListBar</c> control is modelled as an extension to
            the <c>System.Windows.Forms.UserControl</c> class.  Bars
            are configured using <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> objects which are
            collected in the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroupCollection"/> object
            accessible through the control's <see cref="P:vbAccelerator.Components.ListBarControl.ListBar.Groups"/> accessor.
            Each <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> in turn contains a 
            <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItemCollection"/> of <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> objects 
            which represent the buttons within a group.
            </summary>	
            
            <remarks>
            Copyright © 2003 Steve McMahon for vbAccelerator.com.
            vbAccelerator is a Trade Mark of vbAccelerator Ltd.  All Rights
            Reserved.  Please visit http://vbaccelerator.com/ for more
            on this and other VB and .NET Framework code.  Comments to
            mailto:steve@vbaccelerator.com.
            </remarks>
            
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.groups">
            <summary>
            Reference to the collection of groups contained within the ListBar control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.toolTip">
            <summary>
            Reference to an external ToolTip object.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.largeImageList">
            <summary>
            Reference to an external Image List for drawing the large icon view.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.smallImageList">
            <summary>
            Reference to an external Image List for drawing the small icon view.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.buttonPressed">
            <summary>
            A timer for controlling scrolling when the scroll buttons are held
            down.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.activeButton">
            <summary>
            Contains a reference to the active scroll button when one is pressed
            and the mouse is over it.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.lastScrollTime">
            <summary>
            The last time a scroll occurred during a drag-drop operation.  Used
            to control the speed of scrolling during drag-drop.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.drawStyle">
            <summary>
            Drawing style fo the control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.lastWidth">
            <summary>
            Last width the control was drawn at.  Used to control resizing.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.lastHeight">
            <summary>
            Last height the control was drawn at.  Used to control resizing.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.redraw">
            <summary>
            Flag to control whether redrawing occurs or not
            during updating:
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.btnUp">
            <summary>
            Up scroll button reference.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.btnDown">
            <summary>
            Down scroll buttons reference.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.rcListView">
            <summary>
            The rectangle containing the "ListView" portion of the control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.mouseTrack">
            <summary>
            The object that the mouse is currently over, if any.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.mouseDown">
            <summary>
            The object that the mouse is currently down on, if any.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.selectOnMouseDown">
            <summary>
            Whether items are selected on MouseDown or
            MouseUp.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.allowDragItems">
            <summary>
            Whether items can be dragged or not
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.allowDragGroups">
            <summary>
            Whether groups can be dragged or not
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.dragInsertPoint">
            <summary>
            During drag-drop, the insert point, if any.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.dragHoverOver">
            <summary>
            The object that was last hovered over during
            drag-drop, if any:
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.dragHoverOverStartTime">
            <summary>
            The time at which hovering started over the object
            which is currently being hovered over:
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.editItem">
            <summary>
            The ListBarItem currently being edited, if any
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.editGroup">
            <summary>
            The ListBarGroup currently being edited, if any
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.scrollingGroup">
            <summary>
            Are we scrolling a new group into view or not?
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.indexCurrent">
            <summary>
            The index of the group which is currently selected
            when scrolling a new group into view:
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.indexNew">
            <summary>
            The index of the newly selected group which will replace
            the selected index when scrolling a new group into view:
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.txtEdit">
            <summary>
            The Text Box used for editing an item's caption.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.popupCancel">
            <summary>
            A class to determine when the TextBox used for
            editing should be cancelled:
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.#ctor">
            <summary>
            Creates a new instance of a ListBar control.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.buttonPressed_Tick(System.Object,System.EventArgs)">
            <summary>
            Controls scrolling when the mouse is over and down on a scroll
            bar button.
            </summary>
            <param name="sender">The object which raised this event.</param>
            <param name="e">Arguments associated with this event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.Scroll(vbAccelerator.Components.ListBarControl.ListBarScrollButton,System.Boolean)">
            <summary>
            Scroll the control for the selected button.
            </summary>
            <param name="button">Button to scroll for.</param>
            <param name="fromTimer">Whether request to scroll from a 
            scroll button timer event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.Scroll(vbAccelerator.Components.ListBarControl.ListBarScrollButton)">
            <summary>
            Scroll the control for the selected button.
            </summary>
            <param name="button">Button to scroll for.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.Scroll(System.Int32)">
            <summary>
            Scroll the control in the specified direction.
            </summary>
            <param name="direction">The direction to move in.  Note that this follows
            the direction of movement of an item: +1 scrolls up, -1 scrolls down.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.Scroll(System.Int32,System.Boolean)">
            <summary>
            Scroll the control in the specified direction.
            </summary>
            <param name="direction">The direction to move in.  Note that this follows
            the direction of movement of an item: +1 scrolls up, -1 scrolls down.</param>
            <param name="fromTimer">Whether request to scroll from a 
            scroll button timer event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event and performs internal
            sizing of the objects in the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event for this control
            and internally sizes the display.
            </summary>
            <param name="e">Event arguments associated with this
            event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.GetClientRectangleExcludingBorder">
            <summary>
            Called by the control's internal sizing mechanism.
            Returns the client size excluding the border of the
            control.
            </summary>
            <returns>A <c>Rectangle</c> providing the area to 
            draw the control into.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.GetScrollButtonRectangle(vbAccelerator.Components.ListBarControl.ListBarScrollButton.ListBarScrollButtonType,vbAccelerator.Components.ListBarControl.ListBarGroup,System.Int32)">
            <summary>
            Called by the control's internal sizing mechanism.
            Returns the rectangle for a scroll button.
            </summary>
            <param name="buttonType">The scroll button to
            get the rectangle for.</param>
            <param name="selectedGroup">The Selected Group in the control.</param>
            <param name="internalGroupHeight">The internal height of the
            selected group</param>
            <returns>The Rectangle for the scroll button.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event and performs internal drawing of the
            control.	
            </summary>
            <param name="e">A PaintEventArgs object with details about the 
            paint event that must be performed.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the double click event and performs internal double-click
            processing for the control.
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/> associated with this
            double-click event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnItemDoubleClicked(vbAccelerator.Components.ListBarControl.ItemClickedEventArgs)">
            <summary>
            Raises the <see cref="F:vbAccelerator.Components.ListBarControl.ListBar.ItemDoubleClicked"/> event for an item.
            </summary>
            <param name="e">The <see cref="T:vbAccelerator.Components.ListBarControl.ItemClickedEventArgs"/> details
            associated with the double click event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event and performs internal mouse-down
            processing for the control.
            </summary>
            <param name="e">A MouseEventArgs object with details about the
            mouse event that has occurred.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event and performs mouse move processing
            for the control.
            </summary>
            <param name="e">A MouseEventArgs object describing the mouse
            move event that has occurred.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event and performs mouse up processing
            for the control.
            </summary>
            <param name="e">A MouseEventArgs object describing the mouse
            move event that has occurred.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event and performs internal mouse
            track processing for the control.
            </summary>
            <param name="e">Event arguments associated with this event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseWheel event and performs mouse wheel 
            processing for the control.
            </summary>
            <param name="e">A MouseEventArgs object describing the mouse
            move event that has occurred.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the DragOver event and performs internal processing of 
            drag-drop to show the insertion point and navigate through
            the items in the control.
            </summary>
            <param name="e">A DragEventArgs object describing the drag
            over being performed.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnBeforeGroupChanged(vbAccelerator.Components.ListBarControl.BeforeGroupChangedEventArgs@)">
            <summary>
            Raises the BeforeSelectedGroupChanged event.  This event enables
            the user to prevent a group selection.
            </summary>
            <param name="e">The BeforeGroupChangedEventArgs object associated
            with this event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnBeforeItemClicked(vbAccelerator.Components.ListBarControl.BeforeItemClickedEventArgs@)">
            <summary>
            Raises the BeforeItemClicked event.  This event enables
            the user to prevent an item from being selected.
            </summary>
            <param name="e">The BeforeItemClickedEventArgs object associated
            with this event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnItemClicked(vbAccelerator.Components.ListBarControl.ItemClickedEventArgs)">
            <summary>
            Raises the <c>ItemClicked</c> event. 
            </summary>
            <param name="e">The <c>ItemClickedEventArgs</c> object associated 
            with this event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnGroupClicked(vbAccelerator.Components.ListBarControl.GroupClickedEventArgs)">
            <summary>
            Raises the <c>GroupClicked</c> event.
            </summary>
            <param name="e">The <c>GroupClickedEventArgs</c> object
            associated with this event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnBeforeLabelEdit(vbAccelerator.Components.ListBarControl.ListBarLabelEditEventArgs)">
            <summary>
            Raises the BeforeLabelEdit event for an item in the control.
            </summary>
            <param name="e">The LabelEditEventArgs describing the item
            that is about to be edited and allowing the edit action
            to be cancelled.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnAfterLabelEdit(vbAccelerator.Components.ListBarControl.ListBarLabelEditEventArgs)">
            <summary>
            Raises the AfterLabelEdit event for an item in the control.
            </summary>
            <param name="e">The AfterEditEventArgs describing the item
            that has just been edited and allowing the edit action
            to be cancelled or the new caption to be changed.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.OnSelectedGroupChanged(System.EventArgs)">
            <summary>
            Raises the <c>SelectedGroupChanged</c> event.
            </summary>
            <param name="e">An EventArgs object associated with the event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.MouseSelectItem(vbAccelerator.Components.ListBarControl.ListBarItem,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Selects an item in response to a mouse event.
            </summary>
            <param name="item">Item to be selected.</param>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/> 
            details associated with the mouse event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.SelectItem(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Selects an item in the selected bar and makes
            it visible.
            </summary>
            <param name="item">The item to select.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.StartGroupEdit(vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Starts editing the specified ListBarGroup.  Note this
            method is called from the StartEdit method of a ListBarGroup.
            </summary>
            <param name="group">The group to start editing.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.StartItemEdit(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Starts editing the specified <c>ListBarItem</c>.  Note this
            method is called from the <c>StartEdit</c> method of a 
            <c>ListBarItem</c>.
            <seealso cref="M:vbAccelerator.Components.ListBarControl.ListBarItem.StartEdit"/>
            </summary>
            <param name="item">The item to start editing.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.EnsureItemVisible(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Brings the specified <c>ListBarItem</c> into view if it is not already
            visible.  The <c>ListBarItem</c> must be in the selected group.
            <seealso cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/>
            <seealso cref="P:vbAccelerator.Components.ListBarControl.ListBar.SelectedGroup"/>
            </summary>
            <param name="item">Item to bring into view.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.HitTest(System.Drawing.Point)">
            <summary>
            Checks if there is an object which interacts with
            the mouse in the control under the specified point.
            </summary>
            <param name="pt">The point to test.</param>
            <returns>If there is a mouse object under the point 
            then its IMouseObject interface, otherwise null.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.HitTest(System.Drawing.Point,System.Boolean)">
            <summary>
            Checks if there is an object which interacts with
            the mouse in the control under the specified point.
            </summary>
            <param name="pt">The point to test.</param>
            <returns>If there is a mouse object under the point 
            then its IMouseObject interface, otherwise null.</returns>
            <param name="forDragDrop">Whether the hit testing is
            being performed for a drag-drop operation or not.  During
            drag-drop, the hittest rectangle is relaxed so it includes
            the entire rectangle and not just the icon and text.
            </param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.GroupChanged(vbAccelerator.Components.ListBarControl.ListBarGroup,System.Boolean)">
            <summary>
            Internal notification from a ListBarGroup that it has 
            been changed.
            </summary>
            <param name="group">The ListBarGroup which has been
            changed, or null the group has been removed.</param>
            <param name="addRemove">Whether the effect of the
            change will require the control to re-measured.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.ItemChanged(vbAccelerator.Components.ListBarControl.ListBarItem,System.Boolean)">
            <summary>
            Internal notification from a ListBarItem that it has been
            changed.
            </summary>
            <param name="item">The ListBarItem which has been changed, 
            or null if the item has been removed.</param>
            <param name="addRemove">Whether the effect of the control
            will require the bar's contents to be remeasured.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.PostResizeBarChanged">
            <summary>
            Ensures the scroll bar isn't irrelevantly 
            begin displayed.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.GetGroupButtonWidth(vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Called by the control's internal sizing mechanism.
            Returns the size of a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> button
            rectangle.
            </summary>
            <param name="group">The <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> to get the 
            button width for.</param>
            <returns>The width of the button.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.SetGroups(vbAccelerator.Components.ListBarControl.ListBarGroupCollection)">
            <summary>
            Sets the groups object associated with this control
            to a new group collection.
            </summary>
            <param name="groups">The <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroupCollection"/> object holding
            the new collection of groups to associate with this control.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.BeginUpdate">
            <summary>
            Prevents the control from drawing until the 
            <see cref="M:vbAccelerator.Components.ListBarControl.ListBar.EndUpdate"/> method is called.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.EndUpdate">
            <summary>
            Resumes drawing of the control after drawing was suspended by the 
            <see cref="M:vbAccelerator.Components.ListBarControl.ListBar.BeginUpdate"/> method.		
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.RenderScrollNewGroup(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the control when a new group is being scrolled
            into view.
            </summary>
            <param name="pe">The arguments associated with the paint
            event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the control given the object passed to a Paint event.
            </summary>
            <param name="pe">The arguments associated with the paint
            event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.RenderControlBorder(System.Drawing.Graphics)">
            <summary>
            Draw a border around the control.  The default
            implementation draws a 1 pixel inset border.
            </summary>
            <param name="gfx">The graphics object to drawn onto.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.RenderDragInsertPoint(System.Drawing.Graphics,vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Draws the drag insert point, if any.  The drag insert point is
            drawn using the same style as the Windows XP ListView drag
            insert point.
            
            Note that the Outlook ListBar draws a single pixel drag insert
            point rather than a double width one.  I preferred the ListView 
            XP style so went with this.  The code can be overridden to
            use a single pixel border instead if desired. 
            </summary>
            <param name="gfx">The graphics object to draw onto.</param>
            <param name="selectedGroup">The currently selected ListBarGroup.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.CreateListBarGroupCollection">
            <summary>
            Creates a new instance of the ListBarGroupCollection used by this
            control to store the ListBarGroups.  Fired during control 
            initialisation.
            </summary>
            <returns>A new instance of the ListBarGroupCollection to be used
            by the control to store ListBarGroups.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.CreateListBarScrollButton(vbAccelerator.Components.ListBarControl.ListBarScrollButton.ListBarScrollButtonType)">
            <summary>
            Creates a new instance of a ListBarScrollButton used by this control
            to draw the scroll buttons.  Fired during control initialisation
            </summary>
            <param name="buttonType">The type of scroll button (Up or Down)
            to create</param>
            <returns>A new ListBarScrollButton which is drawn when a ListBar
            contains more items than can be displayed.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.BeforeSelectedGroupChanged">
            <summary>
            Raised before the selected group in the ListBar control is changed. Allows
            the group selection to be cancelled.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.SelectedGroupChanged">
            <summary>
            Raised when the selected group in a ListBar control has been
            changed.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.BeforeItemClicked">
            <summary>
            Raised before an item in a ListBar control is clicked.  Allows
            the item selection to be cancelled.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.ItemClicked">
            <summary>
            Raised when an item has been clicked in the ListBar control.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.ItemDoubleClicked">
            <summary>
            Raised when an item has been double clicked in the ListBar control.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.GroupClicked">
            <summary>
            Raised when a group has been clicked in the ListBar control.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.BeforeLabelEdit">
            <summary>
            Raised before an item's label is about to be edited in the ListBar
            control.  Allows the label edit to be cancelled.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.ListBar.AfterLabelEdit">
            <summary>
            Raised after an item's label has been edited in the ListBar control.
            Allows the new caption to be checked and the edit cancelled.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.Font">
            <summary>
            Gets/sets the default <see cref="T:System.Drawing.Font"/> used to 
            render text in the control.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.SelectOnMouseDown">
            <summary>
            Gets/sets whether items are selected on MouseDown,
            rather than on MouseUp, which is the default.	
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.AllowDragItems">
            <summary>
            Gets/sets whether items will be dragged 
            in the control automatically.  The default
            is <c>True</c>.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.AllowDragGroups">
            <summary>
            Gets/sets whether groups will be dragged 
            in the control automatically.  The default
            is <c>True</c>. (Note in MS Outlook
            Groups cannot be reordered by dragging, but
            they can in VS.NET).
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.EditItem">
            <summary>
            Gets the item which is currently being edited, if any,
            otherwise returns null.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.DrawStyle">
            <summary>
            Gets/sets how the ListBar control will be drawn.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.Groups">
            <summary>
            Gets the collection of groups in the ListBar.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.ToolTip">
            <summary>
            Gets/sets the tooltip object associated with this control.
            The control does not generate its own internal Tooltips
            and instead relies on an external ToolTip object to
            display tooltips.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.LargeImageList">
            <summary>
            Gets/sets the large icon ImageList to be used for items 
            with the <see cref="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.LargeIcons"/> and 
            <see cref="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.LargeIconsOnly"/> view.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.SmallImageList">
            <summary>
            Gets/sets the small icon ImageList to be used for ListBar groups
            using the <see cref="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.SmallIcons"/> or 
            <see cref="F:vbAccelerator.Components.ListBarControl.ListBarGroupView.SmallIconsOnly"/> view.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBar.SelectedGroup">
            <summary>
            Returns the currently selected group in the ListBar control,
            if any.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarGroupCollection">
            <summary>
            A class to hold the collection of groups in the ListBar control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.owner">
            <summary>
            The ListBar which owns this collection
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.Add(vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Adds a new <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> to the control.
            </summary>
            <param name="group">The group to add to the control</param>
            <returns>The index at which the group was added.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.Add(System.String)">
            <summary>
            Adds a new <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> with the specified caption to
            the control and returns a reference to it.
            </summary>
            <param name="caption">The caption for the new ListBarGroup.</param>
            <returns>The ListBarGroup added to the control.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.AddRange(System.String[])">
            <summary>
            Adds a series of <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> objectss based on the supplied captions.
            </summary>
            <param name="captions">The array of captions to use when creating
            the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> objects.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.AddRange(vbAccelerator.Components.ListBarControl.ListBarGroup[])">
            <summary>
            Adds a range of previously defined <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> objects.
            </summary>
            <param name="values">The array of ListBarGroups to add
            to the control.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.Contains(vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Determines whether a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> element is contained within 
            the control's collection of groups.
            </summary>
            <param name="group">The ListBarGroup to check if present.</param>
            <returns>True if the ListBarGroup is contained within the control's
            collection, False otherwise.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.IndexOf(vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Gets the 0-based index of the specified <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> within this
            collection.
            </summary>
            <param name="group">The group to find the index for.</param>
            <returns>The 0-based index of the group, if found, otherwise - 1.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.Insert(System.Int32,vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Inserts a group at the specified 0-based index in the collection
            of groups.
            </summary>
            <param name="index">The 0-based index to insert the group at.</param>
            <param name="group">The ListBarGroup to add.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.InsertBefore(vbAccelerator.Components.ListBarControl.ListBarGroup,vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Inserts a group immediately before the specified <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/>.
            </summary>
            <param name="groupBefore">ListBarGroup to insert before.</param>
            <param name="group">Group to insert.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.InsertAfter(vbAccelerator.Components.ListBarControl.ListBarGroup,vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Inserts a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> immediately after the specified ListBarGroup.
            </summary>
            <param name="groupAfter">ListBarGroup to insert after.</param>
            <param name="group">Group to insert.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.Remove(vbAccelerator.Components.ListBarControl.ListBarGroup)">
            <summary>
            Removes the specified <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/>.
            </summary>
            <param name="group">The group to remove.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.NotifyOwner(vbAccelerator.Components.ListBarControl.ListBarGroup,System.Boolean)">
            <summary>
            Notifies the owning ListBar control of any changes to a group.
            </summary>
            <param name="group">The Group which has changed.</param>
            <param name="addRemove">Whether the control should resize
            all groups associated with the ListBar.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.OnClearComplete">
            <summary>
            Notifies the control after clearing all groups.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Notifies the control after inserting a new ListBarGroup.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Notifies the control after removing a new ListBarGroup.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Notifies the control after setting a ListBarGroup to another ListBarGroup.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            TODO: This method has not been implemented yet.
            
            Populates a System.Runtime.Serialization.SerializationInfo object with the 
            data needed to serialize this object.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            to populate with data.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.SetOwner(vbAccelerator.Components.ListBarControl.ListBar)">
            <summary>
            Enables a deserialized object graph to be associated with a ListBar
            control.
            </summary>
            <param name="owner">The ListBar control which will own
            this collection of items.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            TODO: This method has not been implemented yet.
            
            Constructs this object from a serialized representation.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            containing the serialized data to build this object from.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.#ctor(vbAccelerator.Components.ListBarControl.ListBar)">
            <summary>
            Creates a new instance of the ListBarGroup collection and associates
            it with the control which owns it.
            </summary>
            <param name="owner">The owning ListBar control.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> at the specified 0-based index.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroupCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> with the specified string key.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarGroup">
            <summary>
            A <c>ListBarGroup</c> is a bar within a <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> control.
            A bar can either contain items or it can contain a Windows
            Forms control.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.IMouseObject">
            <summary>
            An internal interface specifying the properties and methods which must
            be supported by an object in the control which interacts with the
            mouse.
            TODO: think of a better name for this interface
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.IMouseObject.MouseDownPoint">
            <summary>
            Gets/sets the point at which the mouse button was
            pressed.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.IMouseObject.ToolTipText">
            <summary>
            Gets/sets the tooltip text for this object.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.IMouseObject.MouseOver">
            <summary>
            Gets/sets whether the mouse is over the object or not.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.IMouseObject.MouseDown">
            <summary>
            Gets/sets whether the mouse was pressed on the object or not.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.owner">
            <summary>
            The owning control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.caption">
            <summary>
            The caption of the group.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.selected">
            <summary>
            Whether the item is selected or not.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.toolTipText">
            <summary>
            The tooltip text for this group.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.key">
            <summary>
            The string key to associate with this item.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.tag">
            <summary>
            User-defined data to associate with this item.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.subItems">
            <summary>
            Temporary array to hold the subitems to add to
            this group once it's owner has been assigned.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.items">
            <summary>
            The collection of items associated with this 
            group.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.childControl">
            <summary>
            A child control to display in this bar instead
            of the child items.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.font">
            <summary>
            Font to render this group with.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.foreColor">
            <summary>
            ForeColor to render this group with.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.backColor">
            <summary>
            BackColor to render this group with.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.rectangle">
            <summary>
            Bounding rectangle for this group's button.  The height
            is managed by this object but the other members are typically
            adjusted by the owning control through the <see cref="M:vbAccelerator.Components.ListBarControl.ListBarGroup.SetLocationAndWidth(System.Drawing.Point,System.Int32)"/>
            and the <see cref="M:vbAccelerator.Components.ListBarControl.ListBarGroup.SetButtonHeight(System.Drawing.Font)"/> methods.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.iconSize">
            <summary>
            The view (LargeIcons or SmallIcons) to use when drawing the items 
            in the bar.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.scrollOffset">
            <summary>
            The scroll 
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.mouseOver">
            <summary>
            Whether the mouse is over the button or not.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.mouseDown">
            <summary>
            Whether the mouse is down on the button or not.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.mouseDownPoint">
            <summary>
            The point at which the mouse was clicked on the group
            button.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarGroup.visible">
            <summary>
            Whether the group is visible or not.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.ToString">
            <summary>
            Returns a string representation of this <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/>.
            </summary>
            <returns>A string containing the class name, caption, rectangle
            and item count for this group.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.CreateListBarItemCollection">
            <summary>
            Called to create a new item collection for this ListBarGroup.
            </summary>
            <returns>The ListBarItemCollection that will be used for this
            ListBarGroup</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.CreateListBarItemCollection(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called to create a new item collection for this ListBarGroup
            when the data is being deserialized
            </summary>
            <returns>The ListBarItemCollection that will be used for this
            ListBarGroup</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.SetButtonHeight(System.Drawing.Font)">
            <summary>
            Called to set the height of this group's button by the owning control.
            </summary>
            <param name="defaultFont">The default <see cref="T:System.Drawing.Font"/>
            to use when this item does not have a specific font set.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.SetLocationAndWidth(System.Drawing.Point,System.Int32)">
            <summary>
            Sets the location and width of the button which
            activates this <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/>.  This method
            is called by internally by the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> 
            which owns this item.
            </summary>
            <remarks>
            This member is not intended to be called from client code.
            If you do use it, it is likely that a subsequent operation
            on the control or group will replace the values.  If you
            need more control over placement, override this class
            and build the logic into the override for this method
            instead.
            </remarks>
            <param name="location">The new location for the item.</param>
            <param name="width">The new width of the item.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.DrawBar(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ImageList,System.Drawing.Font,vbAccelerator.Components.ListBarControl.ListBarDrawStyle,System.Boolean)">
            <summary>
            Draws the items within this <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> onto the control.
            </summary>
            <param name="gfx">The <see cref="T:System.Drawing.Graphics"/> object to draw onto.</param>
            <param name="bounds">The bounding <see cref="T:System.Drawing.Rectangle"/> within which
            to draw the items.</param>
            <param name="ils">The <see cref="T:System.Windows.Forms.ImageList"/> object to use to draw
            the bar.</param>
            <param name="defaultFont">The default <see cref="T:System.Drawing.Font"/> to use.</param>
            <param name="style">The style to draw the ListBar in.</param>
            <param name="enabled">Whether the ListBar control is enabled or not.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.DrawButton(System.Drawing.Graphics,System.Drawing.Font,System.Boolean)">
            <summary>
            Draws the button for this group onto the control.
            </summary>
            <param name="gfx">The <see cref="T:System.Drawing.Graphics"/> object to draw onto.</param>
            <param name="defaultFont">The default <see cref="T:System.Drawing.Font"/> to 
            draw with.</param>
            <param name="enabled">Whether this control is enabled or not.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.StartEdit">
            <summary>
            Starts editing this item.  The <c>BeforeLabelEdit</c> event will
            be fired prior to the text box being made visible.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the item is not
            part of a ListBar control.</exception>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.NotifyOwner(System.Boolean)">
            <summary>
            Notifies the owning ListBar control of any changes to a group.
            </summary>
            <param name="addRemove">Whether the control should resize
            all groups associated with the ListBar.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.SetOwner(vbAccelerator.Components.ListBarControl.ListBar)">
            <summary>
            Sets the owning control for this Group.  Called automatically
            whenever a group is added to the group collection associated with
            a ListBar control.
            </summary>
            <param name="owner">The ListBar control which owns this group.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo object with the 
            data needed to serialize this object.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            to populate with data.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs this object from a serialized representation.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            containing the serialized data to build this object from.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.#ctor">
            <summary>
            Constructs a new, blank instance of a ListBarGroup.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.#ctor(System.String)">
            <summary>
            Constructs a new instance of a ListBarGroup with the specified
            caption.
            </summary>
            <param name="caption">Caption for the group's control button.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.#ctor(System.String,vbAccelerator.Components.ListBarControl.ListBarItem[])">
            <summary>
            Constructs a new instance of a ListBarGroup with the specified
            caption and items.
            </summary>
            <param name="caption">Caption for the group's control button.</param>
            <param name="subItems">The array of items to add to the group's
            collection of items.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.#ctor(System.String,System.String)">
            <summary>
            Constructs a new instance of a ListBarGroup with the specified
            caption and tooltip text.
            </summary>
            <param name="caption">Caption for the group's control button.</param>
            <param name="toolTipText">ToolTip text to show when hovering over
            the group.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarGroup.#ctor(System.String,System.String,System.Object)">
            <summary>
            Constructs a new instance of a ListBarGroup with the specified
            caption, tooltip text and user-defined data.
            </summary>
            <param name="caption">Caption for the group's control button.</param>
            <param name="toolTipText">ToolTip text to show when hovering over
            the group.</param>
            <param name="tag">User-defined object data which is associated with
            the group.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.SelectedItem">
            <summary>
            Returns the selected <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> in this Group, if any, otherwise null.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.ChildControl">
            <summary>
            Gets/sets a <see cref="T:System.Windows.Forms.Control"/>
            which can be displayed within this group.
            </summary>
            <remarks>
            Do not set the child control until this group has
            been added to the control.
            </remarks>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.MouseDownPoint">
            <summary>
            Gets/sets the point at which the mouse was clicked on the group
            button.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.MouseOver">
            <summary>
            Gets/sets whether the mouse is over the group button.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.MouseDown">
            <summary>
            Gets/sets whether the mouse is down over the group button.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.ScrollOffset">
            <summary>
            Internal member holding the negative scrolled 
            offset of this bar from the top of the client area
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.View">
            <summary>
            Gets/sets the which view to show the items within this bar.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.ButtonLocation">
            <summary>
            Returns the location of the button
            which activates this group relative
            to the owning control.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.ButtonWidth">
            <summary>
            Returns the width of the button
            which activates this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.ButtonHeight">
            <summary>
            Returns the height of the button
            which activates this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Items">
            <summary>
            Returns the collection of items belonging to this <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/>.
            group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Visible">
            <summary>
            Gets/sets whether this group is visible in the control 
            or not.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Font">
            <summary>
            Gets/sets the <see cref="T:System.Drawing.Font"/> to draw the caption for this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.ForeColor">
            <summary>
            Gets/sets the foreground colour to use when drawing
            the button for this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.BackColor">
            <summary>
            Gets/sets the background colour to use when drawing the button for this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Caption">
            <summary>
            Gets/sets the caption displayed for this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Key">
            <summary>
            Gets/sets the string key associated with this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.ToolTipText">
            <summary>
            Gets/sets the tooltip that will be displayed when the user
            hovers over this group's button.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Selected">
            <summary>
            Gets/sets whether this group is selected or not.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Tag">
            <summary>
            Gets/sets a user-defined object associated with this group.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarGroup.Owner">
            <summary>
            Gets the owning ListBar control for this item.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarItemCollection">
            <summary>
            This class manages a collection of items within a ListBarGroup.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarItemCollection.owner">
            <summary>
            The owning ListBar control.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the items in this collection using the specified
            comparer.
            </summary>
            <param name="comparer">IComparer implementation specifying
            how to sort the objects.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Sort">
            <summary>
            Sorts the items in this collection using the default comparison
            operation (alphabetic).
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ImageList,System.Drawing.Font,vbAccelerator.Components.ListBarControl.ListBarDrawStyle,vbAccelerator.Components.ListBarControl.ListBarGroupView,System.Boolean,System.Int32)">
            <summary>
            Draws the items within this collection.
            </summary>
            <param name="gfx">The graphics object to draw onto.</param>
            <param name="bounds">The bounding rectangle within which
            to draw the items.</param>
            <param name="ils">The ImageList to use when drawing the icons.</param>
            <param name="defaultFont">The default <see cref="T:System.Drawing.Font"/> to use.</param>
            <param name="style">The Style to draw the items using.</param>
            <param name="view">The view to use when drawing the items.</param>
            <param name="enabled">Whether the owning group is enabled or not.</param>
            <param name="scrollOffset">The scrolled offset at which to start
            drawing the items.</param>				
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Add(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Adds a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> object to the group.
            </summary>
            <param name="item">The ListBarItem to add.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Add(System.String)">
            <summary>
            Constructs a new <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> object using the specified
            caption, adds it to the bar and returns it.
            </summary>
            <param name="caption">The caption to use for the ListBarItem.</param>
            <returns>The newly added ListBarItem object.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Add(System.String,System.Int32)">
            <summary>
            Constructs a new ListBarItem object using the specified
            caption and icon, adds it to the bar and returns it.
            </summary>
            <param name="caption">The caption to use for the ListBarItem.</param>
            <param name="iconIndex">The 0-based index of the icon for the ListBarItem
            within an ImageList</param>
            <returns>The newly added ListBarItem object.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.AddRange(vbAccelerator.Components.ListBarControl.ListBarItem[])">
            <summary>
            Adds a range of <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> objects to the bar from an array.
            </summary>
            <param name="values">The array of ListBarItem objects to
            add.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Contains(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Returns <c>true</c> if the specified <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> is contained
            within this collection, otherwise <c>false</c>.
            </summary>
            <param name="item">The ListBarItem to check.</param>
            <returns>True if the specified ListBarItem is contained
            within this collection, False otherwise.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.IndexOf(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Returns the 0-based index of the specified item in the
            collection if present, -1 otherwise.
            </summary>
            <param name="item">The ListBarItem to check.</param>
            <returns>The 0-based index of the specified item in the
            collection if present, -1 otherwise.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Insert(System.Int32,vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Inserts a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> at the specified index in the bar.
            </summary>
            <param name="index">The index to insert at.</param>
            <param name="item">The ListBarItem to insert.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.InsertBefore(vbAccelerator.Components.ListBarControl.ListBarItem,vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Inserts a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> immediately before the specified ListBarItem.
            </summary>
            <param name="itemBefore">ListBarItem to insert before.</param>
            <param name="item">Item to insert.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.InsertAfter(vbAccelerator.Components.ListBarControl.ListBarItem,vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Inserts a <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> immediately after the specified ListBarItem.
            </summary>
            <param name="itemAfter">ListBarItem to insert after.</param>
            <param name="item">Item to insert.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Remove(vbAccelerator.Components.ListBarControl.ListBarItem)">
            <summary>
            Removes the specified <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> from the collection.
            </summary>
            <param name="item">Item to remove.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.OnClearComplete">
            <summary>
            Notifies the owner control that the items have been
            cleared.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Notifies the owner control after an item has been inserted.
            </summary>
            <param name="index">Index of inserting item</param>
            <param name="value">Item which has been inserted.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Notifies the owner control after an item has been removed.
            </summary>
            <param name="index">Index of inserting item</param>
            <param name="value">Item which has been inserted.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Notifies the owner control after an item has been changed using set.
            </summary>
            <param name="index">Index of inserting item</param>
            <param name="oldValue">Old item which was there.</param>
            <param name="newValue">New Item which has been set.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.NotifyOwner(vbAccelerator.Components.ListBarControl.ListBarItem,System.Boolean)">
            <summary>
            Notifies the owning control of a change in this item.
            </summary>
            <param name="addRemove">Set to true if the change
            that has been made requires the size of the display
            to be recalculated.</param>
            <param name="item">The Item which has been changed
            (or null if the item itm is invalid)</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            TODO: This method has not been implemented yet.
            
            Populates a System.Runtime.Serialization.SerializationInfo object with the 
            data needed to serialize this object.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            to populate with data.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.SetOwner(vbAccelerator.Components.ListBarControl.ListBar)">
            <summary>
            Enables a deserialized object graph to be associated with a ListBar
            control.
            </summary>
            <param name="owner">The ListBar control which will own
            this collection of items.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            TODO: This method has not been implemented yet.
            
            Constructs this object from a serialized representation.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            containing the serialized data to build this object from.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItemCollection.#ctor(vbAccelerator.Components.ListBarControl.ListBar)">
            <summary>
            Constructs a new instance of this collection and sets
            the owner.  Typically this is performed by the owning ListBar
            control.
            </summary>
            <param name="owner">The ListBar which owns this collection</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Height">
            <summary>
            Gets the height of all the items within this collection.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> at the specified 0-based index.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/> with the specified key.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarItem">
            <summary>
            A class containing the information describing an Item in the ListBar
            control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarItem.rectangle">
            <summary>
            Bounding rectangle for this item, relative to its owning
            group.  The members of this are typically adjusted by the 
            owning control through the <see cref="M:vbAccelerator.Components.ListBarControl.ListBarItem.SetLocationAndWidth(System.Drawing.Point,System.Int32)"/>
            and the <see cref="M:vbAccelerator.Components.ListBarControl.ListBarItem.SetSize(vbAccelerator.Components.ListBarControl.ListBarGroupView,System.Drawing.Font,System.Drawing.Size)"/> methods.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarItem.iconRectangle">
            <summary>
            The rectangle containing the icon for this item.  Set this 
            when overriding the standard drawing mode for an item;
            the owning ListBar control uses it for hit-testing.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarItem.textRectangle">
            <summary>
            The rectangle containing the text for this item.  Set this
            when overriding the standard drawing mode for an item; 
            the owning ListBar control uses it for hit-testing.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.ToString">
            <summary>
            Returns a string representation of this <see cref="T:vbAccelerator.Components.ListBarControl.ListBarItem"/>.
            </summary>
            <returns>A string containing the class name, caption, icon index,
            enabled state and rectangle for this item.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.DrawButton(System.Drawing.Graphics,System.Windows.Forms.ImageList,System.Drawing.Font,vbAccelerator.Components.ListBarControl.ListBarDrawStyle,vbAccelerator.Components.ListBarControl.ListBarGroupView,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws this item into the specified graphics object.
            </summary>
            <param name="gfx">The <see cref="T:System.Drawing.Graphics"/> object to draw onto.</param>
            <param name="ils">The <see cref="T:System.Windows.Forms.ImageList"/>to source icons from.</param>
            <param name="defaultFont">The default <see cref="T:System.Drawing.Font"/> to use to render
            the item.</param>
            <param name="style">The style (Outlook version) to draw using.</param>
            <param name="view">The view (large or small icons) to draw using.</param>
            <param name="scrollOffset">The offset of the first item from the 
            (0,0) point in the graphics object.</param>
            <param name="controlEnabled">Whether the control is enabled or not.</param>
            <param name="skipDrawText">Whether to skip drawing text or not
            (the item is being edited)</param> 
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.SetLocationAndWidth(System.Drawing.Point,System.Int32)">
            <summary>
            Sets the location and width of this item.  This method
            is called by internally by the <see cref="T:vbAccelerator.Components.ListBarControl.ListBar"/> or
            the <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroup"/> which owns this item.
            </summary>
            <remarks>
            This member is not intended to be called from client code.
            If you do use it, it is likely that a subsequent operation
            on the control or group will replace the values.  If you
            need more control over placement, override this class
            and build the logic into the override for this method
            instead.
            </remarks>
            <param name="location">The new location for the item.</param>
            <param name="width">The new width of the item.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.SetSize(vbAccelerator.Components.ListBarControl.ListBarGroupView,System.Drawing.Font,System.Drawing.Size)">
            <summary>
            Called to set the height of the item by the owning control.
            </summary>
            <param name="view">The <see cref="T:vbAccelerator.Components.ListBarControl.ListBarGroupView"/> in which this
            item is being shown.</param>
            <param name="defaultFont">The default <see cref="T:System.Drawing.Font"/>
            to use when this item does not have a specific font set.</param>
            <param name="imageSize">The size of the images in the ImageList
            used to render this view.</param>		
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.CompareTo(System.Object)">
            <summary>
            Compares this object with another object of the same type.
            The implementation compares the captions of the items to
            allow items to be sorted alphabetically.
            </summary>
            <param name="obj">Another ListBarItem object</param>
            <returns>A 32-bit signed integer that indicates the relative order of the comparands.  
            The return value has these meanings: 
            &lt; 0: This instance is less than obj.  
            0: This instance is equal to obj.  
            &gt; 0: This instance is greater than obj. </returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.EnsureVisible">
            <summary>
            Ensures that this item can be seen in the owner
            control.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the item is not
            part of a ListBarGroup.</exception>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.StartEdit">
            <summary>
            Starts editing this item.  The <c>BeforeLabelEdit</c> event will
            be fired prior to the text box being made visible.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the item is not
            part of a ListBarGroup or not part of the selected group
            in the control.</exception>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.NotifyOwner(System.Boolean)">
            <summary>
            Notifies the owning control of a change in this item.
            </summary>
            <param name="addRemove">Set to true if the change
            that has been made requires the size of the display
            to be recalculated.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.SetOwner(vbAccelerator.Components.ListBarControl.ListBar)">
            <summary>
            Sets the owning ListBar control for this item.
            </summary>
            <param name="owner">The owning ListBar control for this item.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a System.Runtime.Serialization.SerializationInfo object with the 
            data needed to serialize this object.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            to populate with data.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs this object from a serialized representation.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo 
            containing the serialized data to build this object from.</param>
            <param name="context">The destination (see 
            System.Runtime.Serialization.StreamingContext) for this serialization.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.#ctor">
            <summary>
            Constructs a new, empty instance of a ListBarItem.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.#ctor(System.String)">
            <summary>
             Constructs a new instance of a ListBarItem, specifying
             the caption to display.
            </summary>
            <param name="caption">The caption for this item.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.#ctor(System.String,System.Int32)">
            <summary>
             Constructs a new instance of a ListBarItem, specifying
             the caption and the index of the icon to display.
            </summary>
            <param name="caption">The caption for this item.</param>
            <param name="iconIndex">The 0-based index of the icon
            to display</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.#ctor(System.String,System.Int32,System.String)">
            <summary>
             Constructs a new instance of a ListBarItem, specifying
             the caption, the index of the icon and the 
             tooltip text.
            </summary>
            <param name="caption">The caption for this item.</param>
            <param name="iconIndex">The 0-based index of the icon
            to display</param>
            <param name="toolTipText">The tooltip text to show
            when the mouse hovers over this item.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.#ctor(System.String,System.Int32,System.String,System.Object)">
            <summary>
             Constructs a new instance of a ListBarItem, specifying
             the caption, the index of the icon, the 
             tooltip text and the tag.
            </summary>
            <param name="caption">The caption for this item.</param>
            <param name="iconIndex">The 0-based index of the icon
            to display</param>
            <param name="toolTipText">The tooltip text to show
            when the mouse hovers over this item.</param>
            <param name="tag">An object which can be used to 
            associate user-defined data with the item.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarItem.#ctor(System.String,System.Int32,System.String,System.Object,System.String)">
            <summary>
             Constructs a new instance of a ListBarItem, specifying
             the caption, the index of the icon, the 
             tooltip text, the tag and the key.
            </summary>
            <param name="caption">The caption for this item.</param>
            <param name="iconIndex">The 0-based index of the icon
            to display</param>
            <param name="toolTipText">The tooltip text to show
            when the mouse hovers over this item.</param>
            <param name="tag">An object which can be used to 
            associate user-defined data with the item.</param>
            <param name="key">A user-defined string which is 
            associated with the item.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.MouseDownPoint">
            <summary>
            Gets/sets the point at which the mouse was pressed
            on this object.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.MouseOver">
            <summary>
            Gets/sets whether the mouse is over this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.MouseDown">
            <summary>
            Gets/sets whether the mouse is down on this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Enabled">
            <summary>
            Gets/sets whether this item is enabled.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.ForeColor">
            <summary>
            Gets/sets the foreground colour for this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Font">
            <summary>
            Gets/sets the font used for this object.  The default
            font is null which means the item renders using the
            font of the parent control.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Location">
            <summary>
            Gets the location for this item in the control.
            </summary>
            <remarks>
            The location is relative to the group the 
            item belongs to.  Therefore to find the position
            relative to the control you need to add the 
            bottom position of the button rectangle for the group
            and the scroll offset of the item. 
            </remarks>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Height">
            <summary>
            Gets the height of this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Width">
            <summary>
            Gets the width of this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.IconRectangle">
            <summary>
            Returns the rectangle in which the icon is drawn for
            this item, relative to the control.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.TextRectangle">
            <summary>
            Returns the rectangle in which the text is drawn for
            this item, relative to the control.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Selected">
            <summary>
            Gets/sets whether this item is "selected" or not.
            Only one item in the ListBar control can be selected
            at a time.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Key">
            <summary>
            Gets/sets a user-defined string value which can be used
            to look up the item in the collection which owns it.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.ToolTipText">
            <summary>
            Gets/sets the tooltip text that will be displayed when
            the user hovers over this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Caption">
            <summary>
            Gets/sets the caption displayed for this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.IconIndex">
            <summary>
            Gets/sets the 0-based index of an icon in an <see cref="T:System.Windows.Forms.ImageList"/>
            displayed with this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Tag">
            <summary>
            Gets/sets an object which can be used to associate
            user-defined data with this item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarItem.Owner">
            <summary>
            Gets the owning ListBar control for this item.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarScrollButton">
            <summary>
            A class which manages the behaviour and data associated with
            a scrolling button in the ListBar control.  This class can
            be overridden to provide (for example) an alternative rendering
            of the button.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.rectangle">
            <summary>
            The bounding rectangle for this button
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.mouseDown">
            <summary>
            Whether the mouse is down on the button or not
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.mouseOver">
            <summary>
            Whether the mouse is over this button or not
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.mouseDownPoint">
            <summary>
            The point at which the mouse was pressed on this button.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.visible">
            <summary>
            Whether this button is visible or not.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.buttonType">
            <summary>
            The type of scroll button.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.toolTipText">
            <summary>
            ToolTip Text to display.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarScrollButton.HitTest(System.Drawing.Point)">
            <summary>
            Determines whether the specified point is within the control.
            </summary>
            <param name="pt">The point to test.</param>
            <returns>True if the point is over the button and the button
            is visible, false otherwise.</returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarScrollButton.DrawItem(System.Drawing.Graphics,System.Drawing.Color,System.Boolean)">
            <summary>
            Draws the button onto the specified <see cref="T:System.Drawing.Graphics"/> 
            object.
            </summary>
            <remarks>
            Note that this method is called by the owning bar even if the 
            the button's <see cref="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.Visible"/> property is set to <c>False</c>.
            In subclasses of this object this enables the button to 		
            be shown disabled when it isn't needed, rather than the default
            behaviour which is to remove it entirely.
            </remarks>
            <param name="gfx">The <see cref="T:System.Drawing.Graphics"/> object 
            to draw on.</param>
            <param name="defaultBackColor">The default background
            <see cref="T:System.Drawing.Color"/> to use when drawing
            the button.</param>
            <param name="controlEnabled">Whether the owning control is enabled
            or not.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarScrollButton.SetRectangle(System.Drawing.Rectangle)">
            <summary>
            Sets the bounding rectangle for this button.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarScrollButton.#ctor(vbAccelerator.Components.ListBarControl.ListBarScrollButton.ListBarScrollButtonType)">
            <summary>
            Creates a new instance of this class with the specified
            button type (Up or Down)
            </summary>
            <param name="buttonType">The scroll button type to create.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.ToolTipText">
            <summary>
            Gets/sets the tooltip text to display for this button.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.Visible">
            <summary>
            Gets/sets whether this object is visible or not.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.ButtonType">
            <summary>
            Gets which type of scroll button this is (Up or Down)
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.MouseDown">
            <summary>
            Gets/sets whether the mouse is down on this object or not.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.MouseOver">
            <summary>
            Gets/sets whether the mouse is over this object or not.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.MouseDownPoint">
            <summary>
            Gets/sets the point at which the mouse was pressed on
            this object.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarScrollButton.Rectangle">
            <summary>
            Gets the bounding rectangle for this button.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarScrollButton.ListBarScrollButtonType">
            <summary>
            Enumeration of available scroll button types 
            for this control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.ListBarScrollButtonType.Up">
            <summary>
            The scroll button is an up button.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarScrollButton.ListBarScrollButtonType.Down">
            <summary>
            The scroll button is a down button.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint">
            <summary>
            An internal class to manage the drag-drop insert point
            within the control.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.itemBefore">
            <summary>
            The item before the drag-drop insert point, if any
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.itemAfter">
            <summary>
            The item after the drag-drop insert point, if any 
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.overEmptyBar">
            <summary>
            If we're over an empty bar.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.CompareTo(System.Object)">
            <summary>
            Compares this object with another object of the same type.
            This implementation is only really useful for testing equality
            </summary>
            <param name="obj">Another ListBarDragDropInsertPoint object</param>
            <returns>A 32-bit signed integer that indicates the relative order of the comparands.  
            The return value has these meanings: 
            &lt; 0: This instance is less than obj.  
            0: This instance is equal to obj.  
            &gt; 0: This instance is greater than obj. </returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.#ctor(vbAccelerator.Components.ListBarControl.ListBarItem,vbAccelerator.Components.ListBarControl.ListBarItem,System.Boolean)">
            <summary>
             Constructs a new instance of this class, setting the items
             before and after the drag-drop insertion point.
            </summary>
            <param name="itemBefore">Item before the drag-drop insertion
            point, or null if no item before.</param>
            <param name="itemAfter">Item after the drag-drop insertion
            point, or null if no item after.</param>
            <param name="overEmptyBar">Whether the drag-drop insertion
            point should be displayed in an empty bar.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.ItemBefore">
            <summary>
            Returns the item before the drag-drop point, if any.  At least one
            of the properties ItemBefore or ItemAfter will return an item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.ItemAfter">
            <summary>
            Returns the item after the drag-drop point, if any.  At least one
            of the properties ItemBefore or ItemAfter will return an item.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.ListBarDragDropInsertPoint.OverEmptyBar">
            <summary>
            Returns whether the drag point is over an empty bar
            or not.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.ListBarUtility">
            <summary>
            An internal class holding static utility methods for the ListBar
            control.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarUtility.#ctor">
            <summary>
            Private constructor - all methods are intended to be static
            so you shouldn't be able to create an instance of the class.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarUtility.FillRightAngleTriangle(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Point,System.Int32,System.Int32)">
            <summary>
            Fills a right-angled triangle using the specified brush.  The
            origin of the triangle is taken to be the right-angle corner.
            </summary>
            <param name="gfx">Graphics object to draw onto.</param>
            <param name="brush">Brush to fill the right-angled triangle with.</param>
            <param name="origin">Location of the right-angle corner of the triangle.</param>
            <param name="adjacent">The length of the adjacent side of the triangle.</param>
            <param name="opposite">The length of the opposite side of the triangle.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.ListBarUtility.BlendColor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Blends two colours together using the specified alpha amount.
            </summary>
            <param name="colorFrom">Base colour</param>
            <param name="colorTo">Colour to blend with the base colour.</param>
            <param name="alpha">Alpha amount to use when blending the colours.</param>
            <returns>The blended colour.</returns>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.PopupCancelEventHandler">
            <summary>
            Represents the method that handles the <see cref="F:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.PopupCancel"/> event
            raised by this class.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.PopupCancelNotifier">
            <summary>
            
            A class which provides the functionality required to 
            cancel a popup window.  This class wraps two pieces of 
            functionality:
            
            <list type="number">Firstly, it checks whether the form (or the form owner
            for the control) receives a <c>WM_ACTIVATE</c> message with
            wParam = 0.  This indicates the window has gone out
            of focus because the user has clicked on another one.</list>
            <list type="number">Secondly, it installs a Win32 Mouse Hook and checks
            for mouse presses anywhere else in the application.
            This is the same technique that's used in the Framework
            Class Library to implement drop-down designer windows.</list>
            
            However, this functionality may cause a problem because 
            the CLR will mark this code as non-type safe owing to 
            the unmanaged code in the Hook.  If you don't need in-place 
            editing of items, then you can remove this code and any 
            reference to it from the <c>ListBar</c> control and recompile 
            for a 100% managed type-safe version of the control.
            
            <remarks>
            Copyright &#169; 2003 Steve McMahon for vbAccelerator.com.
            vbAccelerator is a Trade Mark of vbAccelerator Ltd.  All Rights
            Reserved.  Please visit http://vbaccelerator.com/ for more
            on this and other VB and .NET Framework code.
            </remarks>
            
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.WM_ACTIVATE">
            <summary>
            Message sent to a window when activation state
            changes
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.trackHandle">
            <summary>
            Window handle to track for popup cancellation
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.disposed">
            <summary>
            Whether this object has been disposed or not
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.StartTracking(System.Windows.Forms.Control)">
            <summary>
            Start tracking for a popup cancellation.
            </summary>
            <param name="ctl">The <c>Control</c> or <c>Form</c>
            to use when tracking Window inactivation messages. This can
            either be a control or a Form.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Check for the WM_ACTIVATE message and stop
            tracking if the window is inactivated.
            </summary>
            <param name="msg">Message details for this window procedure
            event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.StopTracking">
            <summary>
            Stop tracking. Called automatically if this class determines
            the popup should be cancelled.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.OnPopupCancel(System.EventArgs)">
            <summary>
            Notify when the popup should be cancelled,
            and uninstall tracking.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.#ctor">
            <summary>
            Create a new instance of the PopupCancel class
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.Finalize">
            <summary>
            Finalises the class and clears up resources if the
            Dispose() method has not been called.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.Dispose">
            <summary>
            Ensures any resources associated with this object are
            cleared up.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.PopupCancelNotifier.PopupCancel">
            <summary>
            The PopupCancel event is raised whenever the popup should be
            cancelled.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.HookEventArgs">
            <summary>
            Arguments for the Hook event
            </summary>
            <remarks>This code is based on code published by Dino Esposito
            in the article "Cutting Edge: Windows Hooks in the .NET Framework"
            published in the October 2002 edition of MSDN and available online
            at http://msdn.microsoft.com/
            </remarks>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.HookEventArgs.HookCode">
            <summary>
            Hook code
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.HookEventArgs.wParam">
            <summary>
            WPARAM argument
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.HookEventArgs.lParam">
            <summary>
            LPARAM argument
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.HookType">
            <summary>
            Hook Types available under Windows. TODO: documentation
            </summary>
            <remarks>This code is based on code published by Dino Esposito
            in the article "Cutting Edge: Windows Hooks in the .NET Framework"
            published in the October 2002 edition of MSDN and available online
            at http://msdn.microsoft.com/
            </remarks>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.LocalWindowsHook">
            <summary>
            This class defines the core functionality to implement
            a Windows Hook.  Specific implementations can subclass this
            class and override <see cref="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.OnHookInvoked(vbAccelerator.Components.ListBarControl.HookEventArgs@)"/>, or respond to the
            <see cref="F:vbAccelerator.Components.ListBarControl.LocalWindowsHook.HookInvoked"/> event.
            </summary>	
            <remarks>This code is based on code published by Dino Esposito
            in the article "Cutting Edge: Windows Hooks in the .NET Framework"
            published in the October 2002 edition of MSDN and available online.  
            It has been changed as follows:
            <list type="number">Change the hook event handling to an override-based hook 
             mechanism rather than an event-based one.</list>
            <list type="number">The event information needs to be by ref so we can modify the
            details returned to Windows.</list>
            <list type="number">Added some documentation and renamed some fields.</list>
            </remarks>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.LocalWindowsHook.HookHandle">
            <summary>
            The handle to the Windows hook.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.LocalWindowsHook.FilterFunc">
            <summary>
            The hook filter function.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.LocalWindowsHook.HookType">
            <summary>
            The type of hook installed.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.OnHookInvoked(vbAccelerator.Components.ListBarControl.HookEventArgs@)">
            <summary>
            Raises the HookInvoked event. This method can be overriden
            for particular implementations of a hook, or an implementation
            can respond to the HookInvoked event.
            </summary>
            <param name="e">The HookEventArgs for this hook
            event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.#ctor(vbAccelerator.Components.ListBarControl.HookType)">
            <summary>
            Constructs a new instance of this class with
            the specified Hook Type.
            </summary>
            <param name="hookType">Hook type to create</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.CoreHookProc(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Default filter function.
            </summary>
            <param name="code">Hook code</param>
            <param name="wParam">Hook wParam</param>
            <param name="lParam">Hook lParam</param>
            <returns></returns>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.Install">
            <summary>
            Install the hook.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.Uninstall">
            <summary>
            Uninstall the hook.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.Finalize">
            <summary>
            Clear up any resources associated with the hook if 
            Dispose() has not been called.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.LocalWindowsHook.Dispose">
            <summary>
            Clear up any resources associated with this hook.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.LocalWindowsHook.HookInvoked">
            <summary>
            The HookInvoked event is raised whenever the hook fires.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.LocalWindowsHook.HookProc">
            <summary>
            Filter function delegate
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.LocalWindowsHook.HookInvokedEventHandler">
            <summary>
            Represents the method that handles the HookInvoked event
            raised by this class.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT">
            <summary>
            The Windows API <c>MOUSEHOOKSTRUCT</c> which is passed in the 
            <c>lParam</c> of a Mouse Hook event.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT.x">
            <summary>
            Mouse X Position
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT.y">
            <summary>
            Mouse Y Position
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT.handle">
            <summary>
            Handle of window mouse is over
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT.wHitTestCode">
            <summary>
            Hit test code returned
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT.dwExtraInfo">
            <summary>
            Other information about the mouse event
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT.ToString">
            <summary>
            Provides a human-readable string displaying the contents of
            this structure.
            </summary>
            <returns>A string containing details of the contents of
            this structure.</returns>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.MouseHookEventType">
            <summary>
            Types of MouseHook events which are recorded:
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MouseHookEventType.MouseMove">
            <summary>
            The mouse has moved
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MouseHookEventType.MouseDown">
            <summary>
            A mouse button has been depressed
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MouseHookEventType.MouseUp">
            <summary>
            A mouse button has been released
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MouseHookEventType.MouseWheel">
            <summary>
            A mouse wheel action has occurred
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MouseHookEventType.DblClick">
            <summary>
            A mouse button has been double-clicked
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.MouseHookEventLocation">
            <summary>
            The location of the mouse when a mouse hook event is recorded.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MouseHookEventLocation.Client">
            <summary>
            The mouse event occurred in the client area.
            </summary>
        </member>
        <member name="F:vbAccelerator.Components.ListBarControl.MouseHookEventLocation.NonClient">
            <summary>
            The mouse event occurred in a non-client area.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.MouseHookEventArgs">
            <summary>
            Information about a Mouse Hook event
            which has occured.
            TODO: X buttons
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.MouseHookEventArgs.#ctor(System.IntPtr,vbAccelerator.Components.ListBarControl.MOUSEHOOKSTRUCT)">
            <summary>
            Constructs a new MouseHookEvent
            </summary>
            <param name="wParam">The <c>wParam</c> (Message code) for the
            Mouse Hook event</param>
            <param name="mhs">The <c>MOUSEHOOKEVENT</c> structure
            for the hook event.</param>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.MouseHookEventArgs.EventType">
            <summary>
            Gets the type of mouse event.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.MouseHookEventArgs.EventLocation">
            <summary>
            Gets the location in which the mouse event
            occurred.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.MouseHookEventArgs.Button">
            <summary>
            Gets the button which is involved in the action
            (or MouseButtons.None if no button is used).
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.MouseHookEventArgs.X">
            <summary>
            Returns the X location of the mouse when the event
            occurred.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.MouseHookEventArgs.Y">
            <summary>
            Returns the Y location of the mouse when the event
            occurred.
            </summary>
        </member>
        <member name="P:vbAccelerator.Components.ListBarControl.MouseHookEventArgs.Handle">
            <summary>
            Gets the window handle of the object the mouse
            was over.
            </summary>
        </member>
        <member name="T:vbAccelerator.Components.ListBarControl.MouseHookEventHandler">
            <summary>
            Represents the method that handles the HookInvoked event
            raised by this class.
            </summary>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.MouseHook.OnHookInvoked(vbAccelerator.Components.ListBarControl.HookEventArgs@)">
            <summary>
            Override for the generic hook's invoked event to
            convert to a strongly typed MouseHookEvent:
            </summary>
            <param name="e">Generic Hook event argument details</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.MouseHook.OnMouseHookEvent(vbAccelerator.Components.ListBarControl.MouseHookEventArgs@)">
            <summary>
            Raises the MouseHookEvent event.
            </summary>
            <param name="e">The MouseHook event details associated
            with this mouse hook event.</param>
        </member>
        <member name="M:vbAccelerator.Components.ListBarControl.MouseHook.#ctor">
            <summary>
            Constructs a new instance of a MouseHook.
            </summary>
        </member>
        <member name="E:vbAccelerator.Components.ListBarControl.MouseHook.MouseHookEvent">
            <summary>
            The HookInvoked event is raised whenever the hook fires.
            </summary>
        </member>
    </members>
</doc>
